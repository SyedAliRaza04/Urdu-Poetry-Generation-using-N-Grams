# -*- coding: utf-8 -*-
"""Urdu Poetry Generation using N-Grams

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mbebuei3yH8dKtwCjPRb6g75RB5O2dZT

# Submitted By:

---
Syed Ali Raza

Roll No: i191660

Ai-J

#Algorithm:
1. Verify whether the user has input English text or text in Urdu/Arabic script.
2. Call the appropriate function that utilizes a dictionary containing character mappings between the two languages.
3. Replace each letter from the source language with the corresponding letter from the target language based on the mappings in the dictionary.
4. Print the translated text to the user.
"""

# Open the file containing Urdu and Roman text
with open("urdu roman.txt", encoding="utf8") as f:
    eng_text = ""
    urdu_text = ""

    # Read English text and skip the corresponding Urdu text
    for i in range(20):
        eng_text += f.readline()
        f.readline()  # to skip the Urdu text

    # Read Urdu text and skip the corresponding English text
    for i in range(20):
        f.readline()  # to skip the English text
        urdu_text += f.readline()

    # Print the English text and Urdu text separately
    print("ENGLISH TEXT")
    print(eng_text)
    print("______________________________________________________________________________________________________________________________________________________________\n")
    print("URDU TEXT")
    print(urdu_text)

# for mapping urdu sounds with English
urdu_dict={
    u"\u0627":"A", # alif
    u"\u0627":"I", # alif

    u"\u0628":"B", # BAY
    u"\u067E":"P", # PAY
    u"\u062A":"T", # Tay
    u"\u0679":"T", # Thay
    u"\u062B":"S", # SAY
    u"\u062C":"J", # JEEM
    u"\u0686":"CH",# CHAY
    u"\u060C":"",
    u"\u0675":"A",

    u"\u062D":"H", # HAY
    u"\u06DF":"H",
    u"\u062E":"KH",# KHAY
    u"\u062F":"D", # DAL
    u"\u0688":"D", # DUAL
    u"\u0630":"Z", # ZAL
    u"\u068E":"Z",
    u"\u0631":"R", # RE
    u"\u0691":"R", # RRE
    u"\u0632":"Z", # ZE
    u"\u0698":"S", # SHE
    u"\u0633":"S", # SEN
    u"\u0634":"SH",# SHEN
    u"\u0635":"S", # SWAD
    u"\u0636":"D", # DWAD
    u"\u0637":"T", # TOE
    u"\u0638":"Z", # ZOE
    u"\u0639":"A", # AIN
    u"\u0673":"A",

    u"\u063A":"GH",# GHAIN
    u"\u0641":"F", # FE
    u"\u0642":"K", # MOTI KAF
    u"\u06A9":"K", # KAF
    u"\u0643":"K",
    u"\u064A":"E",
    u"\u06AF":"G", # GAF
    u"\u0644":"L", # LAM
    u"\u0645":"M", # MEEM
    u"\u0646":"N", # NOON
    u"\u06BA":"N", # NOON GUNA
    u"\u0658":"N", # NOON GUNA
    u"\u0648":"O", # WAO
    u"\u06C1":"H", # CHOTI HAI
    u"\u06BE":"H", # GOL HE
    u"\u0647":"H",

    u"\u06CC":"A", # CHOTI YE
    u"\u06D2":"Y", # BARI YE
    u"\u0626":"Y", # HAMZA
    u"\u0621":"Y", # HAMZA
    u"\u0622":"AA",# YEH WITH HAMZA ABOVE
    u"\u0654":"Y", # YEH WITH HAMZA
    u"\u06D3":"Y", # BARE YE WITH HAMZA
    u"\u0649":"Y",

    u"\u0624":"O", # WAH WITH HAMZA
    u"\u06C2":"H", # GOL HEH WITH HAMZA
    u"\u06C3":"H", # TEH MARBULA GOAL?
    u"\u0629":"H", # TEH MARBULA?

}
# For mapping wenglsih with Roman Urdu Words
English_dict = {
    "u\u0041" : u"\u0627",
    "B" : u"\u0628",
    "P" : u"\u067E" ,
    "T" : u"\u062A" ,
    "T" : u"\u0679" ,
    "S" : u"\u062B",
    "J" : u"\u062C",
    "CH": u"\u0686",
    ""  : u"\u060C",
    "A" : u"\u0675",
    "I" : u"\u06D2",
    "H" : u"\u062D",
    "H" : u"\u06DF",
    "KH": u"\u062E",
    "D" : u"\u062F",
    "D" : u"\u0688",
    "Z" : u"\u0630",
    "Z" : u"\u068E",
    "R" : u"\u0631",
    "R" : u"\u0691",
    "Z" : u"\u0632",
    "S" : u"\u0698",
    "S" : u"\u0633",
    "SH": u"\u0634",
    "S" : u"\u0635",
    "D" : u"\u0636",
    "T" : u"\u0637",
    "Z" : u"\u0638",
    "A" : u"\u0639",
    "A" : u"\u0673",

    "GH": u"\u063A",
    "F" : u"\u0641",
    "K" : u"\u0642",
    "K" : u"\u06A9",
    "K" : u"\u0643",
    "E" : u"\u064A",
    "G" : u"\u06AF",
    "L" : u"\u0644",
    "M" : u"\u0645",
    "N" : u"\u0646",
    "N" : u"\u06BA",
    "N" : u"\u0658",
    "O" : u"\u0648",
    "Y" : u"\u06C1",
    "H" : u"\u06BE",
    "H" : u"\u0647",

    "Y" : u"\u06CC",
    "Y" : u"\u06D2",
    "Y" : u"\u0626",
    "Y" : u"\u0621",
    "AA": u"\u0622",
    "Y" : u"\u0654",
    "Y" : u"\u06D3",
    "Y" : u"\u0649",

    "O" : u"\u0624",
    "H" : u"\u06C2",
    "H" : u"\u06C3",
    "H" : u"\u0629",
}

def urdu2roman(s1, reverse=False):

    if not isinstance(s1, str):
        raise TypeError("Input must be a string")

    for i, j in urdu_dict.items():
        if not reverse:
            s1 = s1.replace(i, j)
        else:
            s1 = s1.replace(j, i)

    if not s1:
        raise ValueError("Input string cannot be empty")

    return s1

def roman2urdu(s1,reverse=False):

    if not isinstance(s1, str):
        raise TypeError("Input must be a string")

    for i,j in English_dict.items():
        if not reverse:
            s1=s1.replace(i,j)
        else:
            s1=s1.replace(j,i)

    if not s1:
        raise ValueError("Input string cannot be empty")

    return s1

s1 = input("Enter some Urdu or Roman Urdu text: ")

checkset=ord(s1[0])
# Check if the first character is English or Urdu
if (checkset >= 65 and checkset <= 122): # English characters
      s1=s1.upper()
      # Decode string from utf-8 to ignore invalid characters
      s1.encode().decode('utf-8', 'ignore')
      print("\nTranslated Text")
      print("\nEntered text is:", s1)
      print(roman2urdu(s1))
elif (checkset >= 1536 and checkset <=1791 ):   # Urdu characters
      s1.encode().decode('utf-8', 'ignore')
      print("\nEntered text is:", s1)
      print("\nTranslated Text")
      print(urdu2roman(s1))
else:
    print("Error: You have not entered either English or Urdu characters.")